name: Build distribution

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macOS-11]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      # - name: Install boost Ubuntu
      #   if: matrix.os == 'ubuntu-22.04'
      #   uses: MarkusJx/install-boost@v2.4.1
      #   id: install-boost-ubuntu
      #   with:
      #       boost_version: 1.81.0
      #       platform_version: 22.04

      # - name: Install boost MacOS 11
      #   if: matrix.os == 'macOS-11'
      #   uses: MarkusJx/install-boost@v2.4.1
      #   id: install-boost-macos-11
      #   with:
      #       boost_version: 1.81.0
      #       platform_version: 11

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel==2.12.1

      - name: Build package Ubuntu
        if: matrix.os == 'ubuntu-22.04'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # BOOST_ROOT: ${{ steps.install-boost-ubuntu.outputs.BOOST_ROOT }}
          CIBW_BEFORE_ALL: apt-get install && apt-get install libboost-all-dev
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7, <3.11"

      - name: Build package macOS 11
        if: matrix.os == 'macOS-11'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # BOOST_ROOT: ${{ steps.install-boost-macos-11.outputs.BOOST_ROOT }}
          CIBW_BEFORE_ALL: brew update && brew install boost
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7, <3.11"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          repository_url: https://test.pypi.org/legacy/
